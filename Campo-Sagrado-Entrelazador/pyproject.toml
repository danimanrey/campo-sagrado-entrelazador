[tool.poetry]
name = "campo-sagrado"
version = "0.1.0"
description = "Sistema de recomendaciones sacrales basado en ritmos naturales y autoridad interna"
authors = ["Campo Sagrado Developer <campo@sagrado.dev>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
# Core
fastapi = "^0.109.0"
uvicorn = {extras = ["standard"], version = "^0.27.0"}
pydantic = "^2.5.3"
pydantic-settings = "^2.1.0"

# Database
sqlalchemy = "^2.0.25"
alembic = "^1.13.1"
asyncpg = "^0.29.0"  # For async PostgreSQL

# Time and Astronomical
python-dateutil = "^2.8.2"
pytz = "^2024.1"
astral = "^3.2"
hijri-converter = "^2.3.1"
lunarcalendar = "^0.0.9"

# Data Processing
pandas = "^2.1.4"
numpy = "^1.26.3"

# Automation
schedule = "^1.2.0"
watchdog = "^3.0.0"
aiofiles = "^23.2.1"

# External APIs
httpx = "^0.26.0"
aiohttp = "^3.9.1"

# Utilities
python-dotenv = "^1.0.0"
pyyaml = "^6.0.1"
loguru = "^0.7.2"
rich = "^13.7.0"  # Beautiful terminal output

# Cache
redis = "^5.0.1"
aiocache = "^0.12.2"
anthropic = "^0.63.0"

[tool.poetry.group.dev.dependencies]
# Testing
pytest = "^7.4.4"
pytest-asyncio = "^0.23.3"
pytest-cov = "^4.1.0"
pytest-env = "^1.1.3"
pytest-mock = "^3.12.0"
faker = "^22.2.0"

# Code Quality
black = "^23.12.1"
isort = "^5.13.2"
flake8 = "^7.0.0"
mypy = "^1.8.0"
pylint = "^3.0.3"
bandit = "^1.7.6"  # Security linting

# Development Tools
ipython = "^8.20.0"
ipdb = "^0.13.13"
pre-commit = "^3.6.0"

# Documentation
mkdocs = "^1.5.3"
mkdocs-material = "^9.5.4"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88
known_first_party = ["src"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
no_implicit_optional = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
plugins = ["pydantic.mypy"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = """
    -v
    --strict-markers
    --tb=short
    --cov=src
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
    --cov-fail-under=80
"""
env = [
    "ENVIRONMENT=testing",
]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.pylint.messages_control]
disable = "C0111,C0103,R0903,R0913,W0621"

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
